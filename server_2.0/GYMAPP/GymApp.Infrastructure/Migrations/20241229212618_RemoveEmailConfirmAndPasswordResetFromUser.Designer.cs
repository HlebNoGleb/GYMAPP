// <auto-generated />
using System;
using GymApp.Infrastructure.DbContextModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241229212618_RemoveEmailConfirmAndPasswordResetFromUser")]
    partial class RemoveEmailConfirmAndPasswordResetFromUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GymApp.Shared.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("GymApp.Shared.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GymApp.Shared.Models.UserEmailConfirmation", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailConfirmationToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmailConfirmationTokenExpiration")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("EmailConfirmations");
                });

            modelBuilder.Entity("GymApp.Shared.Models.UserPasswordReset", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordResetToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PasswordResetTokenExpiration")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("PasswordResets");
                });

            modelBuilder.Entity("GymApp.Shared.Models.RefreshToken", b =>
                {
                    b.HasOne("GymApp.Shared.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymApp.Shared.Models.UserEmailConfirmation", b =>
                {
                    b.HasOne("GymApp.Shared.Models.User", null)
                        .WithOne("EmailConfirmation")
                        .HasForeignKey("GymApp.Shared.Models.UserEmailConfirmation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymApp.Shared.Models.UserPasswordReset", b =>
                {
                    b.HasOne("GymApp.Shared.Models.User", null)
                        .WithOne("PasswordReset")
                        .HasForeignKey("GymApp.Shared.Models.UserPasswordReset", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymApp.Shared.Models.User", b =>
                {
                    b.Navigation("EmailConfirmation")
                        .IsRequired();

                    b.Navigation("PasswordReset")
                        .IsRequired();

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
